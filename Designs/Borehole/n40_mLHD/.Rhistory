source("borehole_func.R")
d=8
funcname='bore.function'
xf=read.table('XD8N40.txt',header=F)
colnames(xf)=paste('x',1:d,sep='')
xp=data.matrix(read.table('test8.csv',header=F,sep=',')[,1:8])
colnames(xp)=colnames(xf)
dim(xf)
dim(xp)
yp=data.frame(y=do.call(funcname,list(xp)))
dim(yp)
head(yp)
ocn=colnames(xf)
ocn
ocn=colnames(xf)
cp.m=read.csv("order_borehole.csv")
cp.m
cp.m=read.csv("order_borehole.csv")[, 2:9]
cp.m
dim(cp.m)
cp<-cp.m[i,]
cp.m
is.list(cp.m)
is.matrix(cp.m)
cp.m=data.frame(read.csv("order_borehole.csv")[, 2:9])
cp.m
cp.m[1,]
as.matrix(cp.m[i,])
as.matrix(cp.m[1,])
as.vector(cp.m[1,])
vector(cp.m[1,])
cp.m[1,]
as.numeric(cp.m[1,])
source("borehole_func.R")
d=8
funcname='bore.function'
xf=read.table('XD8N40.txt',header=F)
colnames(xf)=paste('x',1:d,sep='')
xp=data.matrix(read.table('test8.csv',header=F,sep=',')[,1:8])
colnames(xp)=colnames(xf)
ocn=colnames(xf)
cp.m=data.frame(read.csv("order_borehole.csv")[, 2:9])
cp<-as.numeric(cp.m[i,]) #i=1, 2, 3,....., 25.
cp.m
i=25
cp<-as.numeric(cp.m[i,]) #i=1, 2, 3,....., 25.
cp
i=1
cp<-as.numeric(cp.m[i,]) #i=1, 2, 3,....., 25.
xf_train=data.matrix(xf[,cp])
colnames(xf_train)=ocn
yf_train=data.frame(y=do.call(funcname,list(xf_train)))
dim(xf_train)
source("borehole_func.R")
#Set Dimension for problem
d = 8
#Set the function Name here
funcname = 'bore.function'
#Read in the base design.
xf = read.table('XD8N40.txt',header=F)
colnames(xf) = paste('x',1:d,sep='')
#Compute test set data
xp = data.matrix(read.table('test8.csv',header=F,sep=',')[,1:8])
colnames(xp) = colnames(xf)
yp = data.frame(y=do.call(funcname,list(xp)))
####### Permutation on the base design
ocn = colnames(xf)
cp.m = data.frame(read.csv("order_borehole.csv")[, 2:9])
i=1
cp = as.numeric(cp.m[i,]) #i=1, 2, 3,....., 25.
xf_train = data.matrix(xf[,cp])
colnames(xf_train) = ocn
yf_train = data.frame(y=do.call(funcname,list(xf_train)))
dim(xf_train)
dim(yf_train)
dim(xp)
dim(yp)
library(mlegp)
?mlegp
library(mlegp)
fit<-mlegp(X=xf_train, Z=yf_train)
library(mlegp)
fit <- mlegp(X=xf_train, Z=yf_train)
yp_pred <- predict(fit, xp)
head(yp_pred)
library(mlegp)
fit <- mlegp(X=xf_train, Z=yf_train)
yp_pred <- predict(fit, xp)
( RMSE<- sqrt(sum((yp_pred-yp)^2)/length(yp_pred)) )
length(yp_pred)
source("borehole_func.R")
d = 8
funcname = 'bore.function'
xf = read.table('XD8N40.txt',header=F)
colnames(xf) = paste('x',1:d,sep='')
xp = data.matrix(read.table('test8.csv',header=F,sep=',')[,1:8])
colnames(xp) = colnames(xf)
yp = data.frame(y=do.call(funcname,list(xp)))
ocn = colnames(xf)
cp.m = data.frame(read.csv("order_borehole.csv")[, 1:8])
cp.m
cp.m = data.frame(read.csv("order_borehole.csv")[, 1:8], h=F)
cp.m
cp.m = data.frame(read.csv("order_borehole.csv",  h=F)[, 1:8])
cp.m
####### Permutation on the base design
ocn = colnames(xf)
cp.m = data.frame(read.csv("order_borehole.csv",  h=F)[, 1:8])
i=1
as.numeric(cp.m[i, ])
i=23
as.numeric(cp.m[i, ])
cp.m = data.frame(read.csv("order_borehole.csv",  h=F)[, 1:8])
cp.m
as.numeric(cp.m[i, ])
